function [out] = PhasedSetup_TRASAT(scenario)
%PHASEDSETUP_TRASAT Sets up Phased Array Toolbox system objects for TRASAT
%   Takes scenario.wave and scenario.traj as input and outputs
%   scenario.phased struct containing system objects for Phased Array
%   Toolbox simulation.

%% Unpack Variables

simsetup = scenario.simsetup;
traj = scenario.traj;
multi = scenario.multi;
flags = scenario.flags;

%% Set up constants

c = physconst('LightSpeed');
lambda = c/simsetup.f_c;

%% Check setting compatibility

% Check that timing parameters are compatible
parameterCheck(scenario);

%% Signal Setup

% Transmit waveform
out.waveform = phased.PhaseCodedWaveform( ...
    'SampleRate',               simsetup.f_s, ...
    'Code',                     'Barker', ...
    'ChipWidth',                ceil(simsetup.f_s*simsetup.t_p/simsetup.n_ch)/simsetup.f_s, ...
    'NumChips',                 simsetup.n_ch, ...
    'PRF',                      simsetup.prf, ...
    'OutputFormat',             'Pulses', ...
    'NumPulses',                flags.sim_rate);

% Matched filter of transmit waveform
out.match = phased.MatchedFilter( ...
    'CoefficientsSource',       'Property', ...
    'Coefficients',             getMatchedFilter(out.waveform), ...
    'SpectrumWindow',           'None');

%% Target & Channel Setup

% Model target position and motion
out.target_plat = phased.Platform( ...
    ...
    'MotionModel',              'Custom', ...
    'CustomTrajectory',         traj.full_traj);

% Set up target to take RCS value at each object call
out.target = phased.RadarTarget( ...
    ...
    'EnablePolarization',       false, ...
    'MeanRCSSource',            'Input port', ...
    'Model',                    'Nonfluctuating', ...
    'OperatingFrequency',       simsetup.f_c, ...
    'PropagationSpeed',         c);

% Set up two way free space path loss
out.target_chan = phased.FreeSpace( ...
    ...
    'PropagationSpeed',         c, ...
    'OperatingFrequency',       simsetup.f_c, ...
    'TwoWayPropagation',        true, ...
    'SampleRate',               simsetup.f_s);


%% Transceiver Setup

% Transceiver position and motion
out.radar_plat = phased.Platform( ...
    ...
    'MotionModel',              'Velocity', ...
    'InitialPosition',          multi.radar_pos(:,1), ...
    'Velocity',                 [0;0;0], ...
    'InitialOrientationAxes',   azelaxes(multi.radar_dir(1,1), ...
    multi.radar_dir(2,1)));

% Set up antenna array parameters
out.antenna = phased.CosineAntennaElement( ...
    ...
    'FrequencyRange',           simsetup.f_c*[0.9 1.1], ...
    'CosinePower',              [1.5 12]);

out.tx_array = phased.ConformalArray( ...
    ...
    'Element',                  out.antenna, ...
    'ElementPosition',          [zeros(1, simsetup.n_ant); ...
    (lambda/2)*((1:simsetup.n_ant) - (simsetup.n_ant+1)/2); ...
    zeros(1, simsetup.n_ant)], ...
    'ElementNormal',            zeros(2, simsetup.n_ant));

out.rx_array = phased.ReplicatedSubarray( ...
    ...
    'Subarray',                 out.tx_array, ...
    'Layout',                   'Custom', ...
    'SubarrayPosition',         [0 0; 0 0; ...
    simsetup.d_ant*lambda/2, ...
    -simsetup.d_ant*lambda/2], ...
    'SubarrayNormal',           [0 0; 0 0]);


% Set up transmitter parameters
out.transmitter = phased.Transmitter( ...
    'PeakPower',                simsetup.tx_pow, ...
    'Gain',                     simsetup.tx_ant_gain, ...
    'InUseOutputPort',          true);

out.radiator = phased.Radiator( ...
    'Sensor',                   out.tx_array, ...
    'PropagationSpeed',         c, ...
    'OperatingFrequency',       simsetup.f_c, ...
    'CombineRadiatedSignals',   true);

% Set up receiver parameters
out.collector = phased.Collector( ...
    'Sensor',                   out.rx_array, ...
    'PropagationSpeed',         c, ...
    'OperatingFrequency',       simsetup.f_c, ...
    'Wavefront',                'Plane');

out.receiver = phased.ReceiverPreamp( ...
    'Gain',                     simsetup.rx_sys_gain + simsetup.rx_ant_gain,  ...
    'NoiseFigure',              simsetup.rx_nf, ...
    'SampleRate',               simsetup.f_s, ...
    'EnableInputPort',          true);


end

